name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.10.3]
        otp: [22.3]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore Dependencies Cache
      uses: actions/cache@v2
      id: mix-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}

    - name: Install Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Restore Build Cache
      uses: actions/cache@v2
      id: build-cache
      with:
        path: _build
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-build-${{ hashFiles('**/mix.lock') }}

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo (linter)
      run: mix credo --strict

    - name: Run Tests
      run: MIX_ENV=test mix espec

    - name: Restore PLT Cache
      uses: actions/cache@v2
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('**/mix.lock') }}

    - name: Generate PLT Cache
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mix dialyzer --plt

    - name: Run Dialyzer
      run: mix dialyzer --no-check --halt-exit-status
